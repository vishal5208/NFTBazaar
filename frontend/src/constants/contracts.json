{
  "NFTBazar": [
    [
      "constructor() nonpayable",
      "event Approval(address indexed,address indexed,uint256 indexed)",
      "event ApprovalForAll(address indexed,address indexed,bool)",
      "event BatchMetadataUpdate(uint256,uint256)",
      "event MetadataUpdate(uint256)",
      "event Transfer(address indexed,address indexed,uint256 indexed)",
      "event idMarketItemCreated(uint256 indexed,address,address,uint256,bool)",
      "function approve(address,uint256)",
      "function balanceOf(address) view returns (uint256)",
      "function createMarketSale(uint256) payable",
      "function createToken(string,uint256) payable returns (uint256)",
      "function fetchItemsListed() view returns (tuple(uint256,address,address,uint256,bool)[])",
      "function fetchMarketItem() view returns (tuple(uint256,address,address,uint256,bool)[])",
      "function fetchMyNFT() view returns (tuple(uint256,address,address,uint256,bool)[])",
      "function getApproved(uint256) view returns (address)",
      "function getListingPrice() view returns (uint256)",
      "function isApprovedForAll(address,address) view returns (bool)",
      "function name() view returns (string)",
      "function ownerOf(uint256) view returns (address)",
      "function reSellToken(uint256,uint256) payable",
      "function safeTransferFrom(address,address,uint256)",
      "function safeTransferFrom(address,address,uint256,bytes)",
      "function setApprovalForAll(address,bool)",
      "function supportsInterface(bytes4) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenURI(uint256) view returns (string)",
      "function transferFrom(address,address,uint256)",
      "function updateListingPrice(uint256) payable"
    ],
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ]
}